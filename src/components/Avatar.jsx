/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useAnimations, useFBX, useGLTF } from "@react-three/drei";

function Avatar(props) {
  const group=useRef();
  const { nodes, materials } = useGLTF("models/c.glb");
  const {animations:wathcAnimation}=useFBX("animations/watchfbx.fbx")
  wathcAnimation[0].name="watch";
  const { actions}=useAnimations(wathcAnimation,group);
  useEffect(()=>
  { 
    actions["watch"].reset().play();

  },[]);
  console.log(wathcAnimation)
  return (
    <group {...props} ref={group} dispose={null}>
      <group rotation-x={-Math.PI /2}>

      
      <primitive object={nodes.Hips} />
      <skinnedMesh
        name="Wolf3D_Avatar"
        geometry={nodes.Wolf3D_Avatar.geometry}
        material={materials.Wolf3D_Avatar}
        skeleton={nodes.Wolf3D_Avatar.skeleton}
        morphTargetDictionary={nodes.Wolf3D_Avatar.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Avatar.morphTargetInfluences}
      />
      </group>
    </group>
  );
}export default Avatar;

useGLTF.preload("models/c.glb");